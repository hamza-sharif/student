// Code generated by go-swagger; DO NOT EDIT.

package students

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "students/gen/models"
)

// AddStudentCreatedCode is the HTTP code returned for type AddStudentCreated
const AddStudentCreatedCode int = 201

/*AddStudentCreated created

swagger:response addStudentCreated
*/
type AddStudentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Students `json:"body,omitempty"`
}

// NewAddStudentCreated creates AddStudentCreated with default headers values
func NewAddStudentCreated() *AddStudentCreated {

	return &AddStudentCreated{}
}

// WithPayload adds the payload to the add student created response
func (o *AddStudentCreated) WithPayload(payload *models.Students) *AddStudentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add student created response
func (o *AddStudentCreated) SetPayload(payload *models.Students) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddStudentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddStudentDefault error

swagger:response addStudentDefault
*/
type AddStudentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddStudentDefault creates AddStudentDefault with default headers values
func NewAddStudentDefault(code int) *AddStudentDefault {
	if code <= 0 {
		code = 500
	}

	return &AddStudentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add student default response
func (o *AddStudentDefault) WithStatusCode(code int) *AddStudentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add student default response
func (o *AddStudentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add student default response
func (o *AddStudentDefault) WithPayload(payload *models.Error) *AddStudentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add student default response
func (o *AddStudentDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddStudentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
